version: '3.8'

services:
  lms-api:
    build:
      args:
        user: juan
        uid: 1000
      context: ./lms-api
      dockerfile: Dockerfile
    image: lms-api
    container_name: lms-api
    restart: unless-stopped
    working_dir: /var/www/lms-api
    volumes:
      - ./lms-api:/var/www/lms-api
    networks:
      - lms
    depends_on:
      - lms-mysql

  lms-web:
    build:
      context: ./lms-web
      dockerfile: Dockerfile
    image: lms-web
    container_name: lms-web
    restart: unless-stopped
    working_dir: /app
    ports:
      - "3000:3000"
      - "5173:5173"
    volumes:
      - ./lms-web:/app
      - /app/node_modules
    networks:
      - lms

  web:
    image: nginx:1.25
    container_name: laravel11-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./lms-api:/var/www
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - lms-api
    networks:
      - lms

  lms-mysql:
    image: mysql:8.0
    container_name: lms-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: lms
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: lms
      MYSQL_PASSWORD: secret
    ports:
      - "3306:3306"
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - lms

networks:
  lms:
    driver: bridge

volumes:
  dbdata: